name: Deploy to Github Pages

on:
  schedule:
    - cron: '0 8,12,16,20 * * *'
  push:
    branches: [ main ]
    paths:
      - 'data/**'
      - 'raw/**'
      - scripts/**
      - 'viewer/**'
      - 'package.json'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      update-dapi-management:
        description: 'Update dapi-management'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  pack-and-deploy-to-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git user
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Set Env
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'fetch')
        run: |
          touch .env
          echo APP_KEY=${{ secrets.APP_KEY }} >> .env
          echo APP_SECRET=${{ secrets.APP_SECRET }} >> .env
          echo DROPBOX=${{ secrets.DROPBOX }} >> .env

      - name: Install Packages
        run: pnpm install

      - name: Check dapi-management
        if: ${{ inputs.update-dapi-management == true }}
        run: pnpm up @api3/dapi-management --recursive --latest

      - name: Commit dapi-management update
        if: ${{ inputs.update-dapi-management == true }}
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Updated dapi-management to latest version" --no-verify --signoff
            git push
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Lint
        run: pnpm run lint

      - name: Fetch Logos
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'fetch')
        run: pnpm run fetch

      - name: Commit fetch changes
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'fetch')
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Fetch Logos from Dropbox" --no-verify --signoff
            git push
            echo "changes_detected=true" >> $GITHUB_ENV
          else
            echo "changes_detected=false" >> $GITHUB_ENV
          fi

      - name: Build Package
        run: pnpm run package

      - name: Run auto-release if changes detected
        if: env.changes_detected == 'true'
        run: pnpm run auto-release

      - name: Commit changeset
        if: env.changes_detected == 'true'
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "Added changeset" --no-verify --signoff
            git push
          fi

      - name: Install Frontend Packages
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy')
        run: pnpm install

      - name: Build Frontend
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy')
        run: pnpm --filter "viewer" build

      - name: Setup Pages
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy')
        uses: actions/configure-pages@v5

      - name: Upload artifact
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy')
        uses: actions/upload-pages-artifact@v3
        with:
          path: './viewer/dist'

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'deploy')
        uses: actions/deploy-pages@v4
